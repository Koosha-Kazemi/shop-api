# Generated by Django 5.1.7 on 2025-03-21 19:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(help_text="Enter the customer's first name.", max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(help_text="Enter the customer's last name.", max_length=50, verbose_name='Last Name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(help_text="Enter the customer's phone number (must start with 09).", max_length=128, region=None, unique=True, verbose_name='Phone Number')),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], help_text="Select the customer's gender.", max_length=6, null=True, verbose_name='Gender')),
                ('is_verified', models.BooleanField(default=False, help_text='Indicates whether the customer is verified.', verbose_name='Is Verified')),
                ('profile_image', models.ImageField(blank=True, help_text="Upload the customer's profile image.", null=True, upload_to='images/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Profile Image')),
                ('birth_date', models.DateTimeField(blank=True, help_text="Enter the customer's birth date.", null=True, verbose_name='Birth Date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text="The date and time when the customer's profile was last updated.", verbose_name='Last Updated')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
